extends layout

block content
  div.form-style-1
   h1 Settings
   form(method="post", action="/submit_settings", enctype="multipart/form-data")
    div.css3-tabstrip
     ul
       li
         input(type="radio" name="css3-tabstrip-0" checked="checked" id="css3-tabstrip-0-0")
         label(for="css3-tabstrip-0-0") Type lattice
         div.form-style-1
           label(for="applyAppropriateFunction")
             input(type="checkbox", id="applyAppropriateFunction", name="applyAppropriateFunction", checked=settings.applyAppropriateFunction)
             = " Apply appropriate function"
           label(for="currentTypeLatticeFile") Current type lattice
           fieldset(for="currentTypeLatticeFile")
             if settings.typeLatticeFile
               input(type="text", value="#{settings.typeLatticeFile}", readonly)
             else
               input(type="text", id="currentTypeLatticeFile", value="no file selected", readonly)
             label
               input(type="checkbox", checked=settings.typeLatticeHasAppropriateFunction, disabled)
               =  " Has appropriate function"
           br
           fieldset
             label(for="typeLatticeFile") Select file:
             input(type="file", id="typeLatticeFile", name="typeLatticeFile")
             input(type='submit', name='submit_settings', value='Edit type lattice')
       li
         input(type="radio" name="css3-tabstrip-0" id="css3-tabstrip-0-1")
         label(for="css3-tabstrip-0-1") Tokenizer
         div.form-style-1
            label(for="tokenizerAlgorithm") Tokenizer algorithm
            select(id="tokenizerAlgorithm", name="tokenizerAlgorithm")
              option(value="noChoice", selected=settings.tokenizerAlgorithm === '') Choose an algorithm
              option(value="wordTokenizer", selected=settings.tokenizerAlgorithm === 'wordTokenizer') Word tokenizer
              option(value="treebankWordTokenizer", , selected=settings.tokenizerAlgorithm === 'treebankWordTokenizer') Treebank word tokenizer
              option(value="regexpTokenizer", selected=settings.tokenizerAlgorithm === 'regexpTokenizer') Regular expression tokenizer
              option(value="wordPunctTokenizer", selected=settings.tokenizerAlgorithm === 'wordPunctTokenizer') Word punctuation tokenizer
            label(for="regularExpression") Regular expression:
            input(type="text", id="regularExpression", name="regularExpression")
       li
         input(type="radio" name="css3-tabstrip-0" id="css3-tabstrip-0-2")
         label(for="css3-tabstrip-0-2") Stemmer
         div.form-style-1
           label
             input(type="checkbox", name="applyStemmer", checked=settings.applyStemmer)
             = " Apply stemmer"
             label(for="stemmerAlgorithm") Stemmer algorithm
             select(id="stemmerAlgorithm", name="stemmerAlgorithm")
               option(value="noChoice", selected=settings.stemmerAlgorithm === '') Choose an algorithm
               option(value="PorterStemmer", selected=settings.stemmerAlgorithm === 'PorterStemmer') Porter Stemmer
               option(value="LancasterStemmer", , selected=settings.stemmerAlgorithm === 'LancasterStemmer') Lancaster Stemmer
       li
         input(type="radio" name="css3-tabstrip-0" id="css3-tabstrip-0-3")
         label(for="css3-tabstrip-0-3") Tagger
         div.form-style-1
            label(for="taggingAlgorithm") Tagging algorithm
            fieldset
                select(id="taggingAlgorithm", name="taggingAlgorithm")
                  option(value="noChoice", selected=settings.taggingAlgorithm === '') Choose an algorithm
                  option(value="fsPOSTagger", selected=settings.taggingAlgorithm === 'fsPOSTagger') Feature Structure POS tagger
                  option(value="simplePOSTagger", selected=settings.taggingAlgorithm === 'simplePOSTagger') Simple POS tagger
                  option(value="brillPOSTagger", selected=settings.taggingAlgorithm === 'brillPOSTagger') Brill POS tagger
                  option(value="wordnet", selected=settings.taggingAlgorithm === 'wordnet') Wordnet
                label
                  input(type="checkbox", name="assignFunctionWordTags", checked=settings.assignFunctionWordTags)
                  = " Assign function word tags to words that could not be tagged"
                label
                  input(type="checkbox", name="stripWordsNotInLexicon", checked=settings.stripWordsNotInLexicon)
                  = " Strip words that could not be tagged"                  
            label(for="currentLexiconFile") Current lexicon
            fieldset(for="currentLexiconFile")
                if settings.lexiconFile
                  input(type="text", value="#{settings.lexiconFile}", readonly)
                else
                  input(type="text", id="currentLexiconFile", value="no file selected", readonly)
                label
                  input(type="checkbox", checked=settings.lexiconHasFeatureStructures, disabled) 
                  = " Has feature structures"
            label(for="lexiconFile") Select lexicon
            fieldset
                input(type="file", id="lexiconFile", name="lexiconFile")
                input(type='submit', name='submit_settings', value='Edit lexicon')
            br
       li
         input(type="radio" name="css3-tabstrip-0" id="css3-tabstrip-0-4")
         label(for="css3-tabstrip-0-4") Parser
         div.form-style-1
            label(for="parsingAlgorithm") Parsing algorithm
            fieldset
                select(id="parsingAlgorithm", name="parsingAlgorithm")
                  option(value="noChoice", selected=settings.parsingAlgorithm === '') Choose an algorithm
                  option(value="CYK", selected=settings.parsingAlgorithm === 'CYK') Cocke Younger Kasami
                  option(value="Earley", selected=settings.parsingAlgorithm === 'Earley') Earley
                  option(value="LeftCorner", selected=settings.parsingAlgorithm === 'LeftCorner') Left-Corner
                  option(value="HeadCorner", selected=settings.parsingAlgorithm === 'HeadCorner') Head-Corner
                label(for="applyUnification", selected=settings.parsingAlgorithm === '')
                  input(type="checkbox", id="applyUnification", name="applyUnification", checked=settings.applyUnification)
                  = " Apply unification"
            label(for="currentGrammarFile") Current grammar
            fieldset(for="currentGrammarFile")
                if settings.grammarFile
                  input(type="text", value="#{settings.grammarFile}", readonly)
                else
                  input(type="text", id="currentGrammarFile", value="no file selected", readonly)
                label
                  input(type="checkbox", checked=settings.grammarIsInCNF, disabled)
                  = " Is in Chomsky Normal Form"
                label
                  input(type="checkbox", checked=settings.grammarHasUnificationConstraints, disabled) 
                  = " Has unification constraints"
            label(for="grammarFile") Select grammar
            fieldset
                input(type="file", id="grammarFile", name="grammarFile")
                input(type='submit', name='submit_settings', value='Edit grammar')
    input(type='submit', name='submit_settings', value='Save')
    input(type='submit', name='submit_settings', value='Cancel')
