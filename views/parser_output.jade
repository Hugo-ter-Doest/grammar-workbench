extends layout
block content
  script(language="javascript" type="text/javascript" src="Jit/jit-yc.js")
  script(language="javascript" type="text/javascript" src="javascript/parse_trees.js")
  div.form-style-1
    h2 Tokenizer output
    fieldset.form-style-1
      div 
        label Tokenized sentence: 
        input(type="text", value="#{JSON.stringify(results.tokenizedSentence)}", readonly)
    h2 Tagger output
    fieldset.form-style-1
      div
        label Sentence length: 
        input(type="text", value=results.sentenceLength, readonly)
      div 
        label Tagged sentence: 
        textarea(rows="20" cols="80")
          #{value=results.taggedSentencePrettyPrint}
    h2 Parser output
    fieldset.form-style-1
      div 
        label Parser: 
        input(type="text", value=results.parsingAlgorithm, readonly)
      div
        label Parsing time: 
        input(type="text", value="#{results.parsingTime} ms", readonly)
      div
        label Number of parses:
        input(type="text", value=results.fullParseItems.length, readonly)
      div
        label Number of items created: 
        input(type="text", value=results.nrOfItems, readonly)
      div
        label In language: 
        input(type="text", value="#{results.inLanguage}", readonly)
      br
      div
        label Chart
        table(border="1px")
          tr
            td(width="50px", height="50px", align="center")=""
            - for (var i = 0; i < results.sentenceLength; i++) {
                td(width="50px", height="50px", align="center")=results.taggedSentence[i][0]
            - }
          tr
            td(width="50px", height="50px", align="center")=""
            - for (var i = 0; i < results.sentenceLength; i++) {
                td(width="50px", height="50px", align="center")=results.taggedSentence[i][1]
            - }
          tr
            - for (var i = 0; i <= results.sentenceLength; i++) {
                td(width="130px", height="50px", align="center")=i
            - }
          tr
            - for (var i = 0; i < results.sentenceLength; i++) {
              tr
                td(width="30px", height="50px", align="center")=i
                - for (var j = 1; j <= results.sentenceLength; j++) {
                    td(width="50px", height="50px", align="left")=JSON.stringify(results.chart.get_complete_items_from_to(i, j))
                - }
            - }
        label Parse trees
        div
          select(name="Available parses", onChange="init_spacetree(this.options[this.selectedIndex].value))")
            - for (var i = 0; i < results.fullParseItems.length; i++) {
                option(value=i) #{"Parse " + i + ": " + results.fullParseItems[i].id}
            - }
        div(id="infovis" style="position:relative; height:700px; width:900px; border:solid 1px #333;")
        label Feature Structure
    script(language="javascript" type="text/javascript").
      var local_data = !{JSON.stringify(results.fullParseItems)};
      init_spacetree(local_data[0]);